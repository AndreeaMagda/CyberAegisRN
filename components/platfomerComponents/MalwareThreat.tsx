import React, { useEffect, useRef } from 'react';
import { Text, Animated } from 'react-native';
import { platformerGameStyles } from '../../app/styles/platformerGameStyle';

interface MalwareThreatProps {
  type: string;
  position: { x: number; y: number };
}

const MalwareThreat: React.FC<MalwareThreatProps> = ({ type, position }) => {
  // Create a pulsing animation
  const scaleAnim = useRef(new Animated.Value(1)).current;

  useEffect(() => {
    // Create a pulsing animation sequence
    const pulseSequence = Animated.sequence([
      Animated.timing(scaleAnim, {
        toValue: 1.2,
        duration: 800,
        useNativeDriver: true,
      }),
      Animated.timing(scaleAnim, {
        toValue: 1,
        duration: 800,
        useNativeDriver: true,
      }),
    ]);

    // Loop the animation
    Animated.loop(pulseSequence).start();

    return () => {
      // Clean up animation when component unmounts
      scaleAnim.stopAnimation();
    };
  }, [scaleAnim]);

  // Get the appropriate emoji based on threat type
  const getThreatEmoji = () => {
    switch (type) {
      case 'virus':
        return '🦠';
      case 'trojan':
        return '🐴';
      case 'ransomware':
        return '🔒';
      case 'worm':
        return '🐛';
      default:
        return '⚠️';
    }
  };

  return (
    <Animated.View
      style={[
        platformerGameStyles.malwareThreat,
        {
          left: position.x,
          top: position.y,
          transform: [{ scale: scaleAnim }],
        },
      ]}
    >
      <Text style={platformerGameStyles.malwareIcon}>{getThreatEmoji()}</Text>
    </Animated.View>
  );
};

export default MalwareThreat;
